# reset network if the connection to the administrative host is lost
5 * * * *	[ "$( /usr/bin/ssh -fT -y -K 60 -i /etc/dropbear/dropbear_rsa_host_key admin@grigorovich-fam4.ddns.net ssh -T -y -K30 -i /etc/dropbear/dropbear_rsa_host_key -p8022 root@127.0.0.1 /usr/bin/dropbearkey -y -f /etc/dropbear/dropbear_rsa_host_key 2>/dev/null |/bin/grep '^ssh-rsa ' )" == "$( /usr/bin/dropbearkey -y -f /etc/dropbear/dropbear_rsa_host_key 2>/dev/null |/bin/grep '^ssh-rsa ' )" ] || /etc/init.d/autossh restart

# restart if internet is lost
*/10 * * * *	bound=4; up=$( uptime |sed 's/^.*\W\+up\W\+\(.*\),\W\+load.*$/\1/' |awk '$2=="min" { print $1 }' ); up=${up:=$bound}; [ $up -lt $bound  ] || { ping -c2 8.8.8.8 &>/dev/null || reboot; }

# writes to the log and calls the handler when WAN ip changed
* * * * *	atnowWanIp=$( { mkfifo dummy; ( echo -n $'\003' >> dummy & ); ( echo 'ifconfig wan0'; echo exit; sleep 1 ) |cat - dummy | nc 192.168.8.1 23 |awk '"inet"==$1 {print $2}'| sed 's/addr://'; rm dummy; } 2> /dev/null ); lastWanIp=$( tail -1 /home/log/wan-ip-was-changed.log 2> /dev/null |awk '{ print $2 }' ); [ "$atnowWanIp" != "$lastWanIp" ] && { echo $( date +%Y-%m-%d-%H:%M:%S )$'\t'${atnowWanIp} >> /home/log/wan-ip-was-changed.log; /root/scripts/on-external-wan-ip-changed.sh; }
